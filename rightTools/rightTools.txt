<b>Правильные инструменты</b>

Контекст
Этот шаблон подходит, когда ваши автоматизированные тесты будут проводиться в течение длительного времени и/или когда вы начинаете автоматизацию тестирования и хотите "сойти на правильную ногу".

Этот шаблон не подходит для одноразовых сценариев, или когда вы экспериментируете с различными инструментами, чтобы увидеть, что они делают.

Имейте в виду, что наличие "правильных инструментов" не так важно, если инструмент работает в вашем контексте. Другие факторы, связанные с автоматизацией тестирования, обычно гораздо более важны и влиятельны, чем выбор инструмента.

Описание

Чтобы выбрать правильные инструменты, вы должны, прежде всего,

/set_clear_goals - <b>Установить четкие цели</b>

в отношении того, чего вы собираетесь достичь с ними, а чего нет. Для этого вы должны сначала

/share_information - <b>Поделиться информацией</b> - с тестировщиками и разработчиками, чтобы узнать, что им на самом деле нужно от автоматизации. Тестировщики и особенно менеджеры могут иметь ложные ожидания: вещи, которые было бы легко автоматизировать, считаются настолько сложными, что они даже не упоминаются, а вещи, которые действительно трудно автоматизировать, как полагают, находятся всего в паре кликов!

    Если вы только начинаете с автоматизации тестирования, то ваши цели будут заключаться в том, чтобы найти некоторые инструменты, которые могут работать с вашим тестируемым программным обеспечением (SUT).
    Если вы переходите на другой инструмент, дополнительным важным критерием будет то, насколько легко вы можете перенести свои тесты со старого инструмента на новый.

Реализация
В зависимости от вашего бюджета вы можете выбрать инструменты с открытым исходным кодом, бесплатные или коммерческие инструменты. Есть несколько важных вопросов, которые следует рассмотреть:

Инструмент должен быть в состоянии делать то, для чего вы его приобрели. Например, инструмент для запуска автоматизации из графического интерфейса должен распознавать все объекты на экранах для управления вашим приложением. Следующее =Score Card=* может помочь вам убедиться, что инструмент имеет все необходимые функции.
Поддержка платформы - Поддержка нескольких операционных систем, планшетов и мобильных устройств
Технологическая поддержка - "мультикомпилятор" и "компиляторные" инструменты тестирования;
Поддержка браузера - Internet Explorer, Firefox, Google Chrome или любой другой браузер на основе элементов управления веб-браузером;
Поддержка источников данных - получение данных из текстовых и XML-файлов, таблиц Excel и баз данных, таких как SQL Server, Oracle и MySQL;
Многоязычная поддержка - локализованные решения, поддерживающие Юникод;
Поддержка типов испытаний - функциональная, нефункциональная и модульная (т.е. nUnit & MSTest);
Поддержка тестового подхода - т.е. Гибридное тестирование по ключевым словам/на основе данных;
Интеграция результатов и отчетов, включая изображения, файлы, базы данных, XML-документы;
Управление тестовым активом / объектом - сопоставьте объект не только по его подписи или идентификатору;
Идентификация классов - анализ GAP классов объектов (общих / пользовательских) и связанных с ними методов на основе сложности, использования, риска, осуществимости и возможности повторного использования;
Обслуживание тестового сценария - ручное усилие (XPATH/обычные выражения), самоподдержка (описательное программирование/нечеткая логика) или сценарий меньше (DSL);
Непрерывная интеграция и интеграция / доставка - с решением для сборки и доставки;
Будущая проверка - внешняя инкапсуляция тестовых активов и связанных с ними метаданных (XAML/xPDL), расширяемость (API/DLL/. NET), HTTP/WCF/COM/WSD и OCR/IR;
Расходы на лицензирование, поддержку и техническое обслуживание - ценовая политика наряду с любыми скрытыми расходами.
Большинство коммерческих инструментов на рынке имеют демо-версии, которые вы можете попробовать в своем приложении. Поставщики коммерческих инструментов предлагают семинары, чтобы доказать, что их инструмент "подходящим" для вас.
Если вы получите инструмент с открытым исходным кодом, инструмент, скорее всего, будет поддерживаться и поддерживаться сообществом с открытым исходным кодом, хотя у некоторых инструментов есть коммерческие компании, предлагающие поддержку.

Несколько вопросов, которые нужно задать:

Насколько легко научиться пользоваться инструментом? Можно ли пройти обучение?
Насколько распространен язык сценариев инструмента? Будет легче найти квалифицированных людей для более популярного скриптового языка
Насколько проста миграция вашего тестового программного обеспечения со старого инструмента на новый?
Насколько хорошо поддерживается инструмент? Как долго поставщик планирует его поддерживать? Планирует ли поставщик внедрить новый инструмент? Если да, будет ли он совместим со старым?
Насколько высока вероятность того, что с новыми версиями инструмент не будет поддерживать ваше приложение или вообще не будет поддерживать (инструментальная регрессия)? **
Насколько легко составить список использования?

Чтобы узнать, какие инструменты доступны на рынке, вы можете:

Поиск в Интернете
Спросите на форумах по автоматизации тестирования, какие инструменты используют другие тестировщики. Затем спросите, что другие тестировщики испытали с инструментами, которые вы рассматриваете.
Посетите конференцию или семинар, который включает в себя выставку с инструментами. Вы можете получить быструю демонстрацию на стенде и получить первоначальное представление об инструменте.
Привлечь консультанта

Как только у вас появятся хорошие кандидаты, попробуйте их

/side_by_side - <b>Бок о бок</b>

Наконец, не забудьте

/prefer_familiar_solutions - <b>Знакомые решения</b> - если в компании уже есть рабочие инструменты, вы сэкономите затраты и усилия, потому что получите выгоду от уже доступного опыта.

Потенциальные проблемы
Прежде чем начать, убедитесь, что у вас есть
/management_support - <b>Поддержка менеджмента</b> - Он вам понадобится, чтобы получить время и ресурсы, необходимые для выбора и внедрения нового инструмента.
Помните, что целью автоматизации тестирования является поддержка тестировщиков. Любой инструмент, который помогает тестировщикам лучше выполнять свою работу, - это инструмент автоматизации тестирования!
Установите приоритеты относительно того, что должно быть автоматизировано в первую очередь. Поскольку членам команды нужно время, чтобы научиться использовать инструмент, вам не нужны все инструменты одновременно, вы можете в конечном итоге заплатить за лицензии, которые вы не будете использовать (пока)!
Сколько усилий вам потребуется для изменения инструментов, зависит в первую очередь от архитектуры автоматизации тестирования, которая была или будет реализована. Если ваша текущая архитектура плохо поддерживает изменение инструмента, то самое время изменить структуру автоматизации и внедрить
/test_automation_framework - <b>Структура автоматизации</b>

Проблемы, решаемые этой схемой:

/hard_to_automate - <b>Трудности автоматизации</b>

/inadequate_tools - <b>Неадекватные инструменты</b>

/manual_interventions - <b>Ручные вмешательства</b>

/no_previous_test_automation - <b>Автоматизации еще не было</b>

/tool_dependency - <b>Зависимость инструмента</b>



